<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Additional custom styling for the green theme and layout */
        .card {
            background-color: #2b2b2b;
            color: #fff;
        }
        .nav-link {
            color: #c2c2c2 !important;
        }
        .nav-link.active {
            color: #00ff00 !important;
        }
        .nav-item{
          font-size: 4vh;
        }
    
    /* Green left border margin for the sidebar */
    .sidebar {
      width:20vw;
        border-right: 0.3vh solid rgba(0, 128, 0, 0.6);
    }

    /* Styling for the links */
    .sidebar-link {
        font-size: 1.5rem; /* Increase the size of the text */
        padding: 10px 15px;
        text-decoration: none; /* Remove underline */
        transition: all 0.3s ease; /* Smooth hover effect */
    }

    /* Hover effect for the links */
    .sidebar-link:hover {
        color: #00ff00; /* Green text color */
        text-shadow: 0 0 1px #00ff00; /* Glow effect */
        font-weight: bold; /* Make the font bold */
        border-right: 0.3vh solid rgba(0, 128, 0, 0.6); /* Extra decoration for hover */
    }




        .canvas-container {
            margin-top: 20px;
        }
       
    .glow-border {
        background-color: #2b2b2b; /* Match the theme */
        color: #fff;
        box-shadow: 0 0 10px rgba(0, 128, 0, 0.6); /* Glowing effect */
        border-radius: 8px; /* Rounded corners for better aesthetics */
    }

   

    .card h4,
    .card p {
        margin: 0;
        padding: 0;
    }


    </style>
</head>
<body data-bs-theme="dark">

<!-- Dashboard Layout -->
<div class="d-flex">
    <!-- Sidebar -->
    <div class="d-flex flex-column p-3 bg-dark sidebar" style="height: 100vh;">
      <h3 class="text-white mb-4" style="padding-bottom:3vh;border-bottom:  0.2vh solid rgba(0, 128, 0, 0.6); font-size: 5vh;letter-spacing: 02.vh;">Finacoaster Dashboard</h3>
      <ul class="nav flex-column">
          <li class="nav-item">
              <a class="nav-link sidebar-link text-white" href="/game" style="font-size: 3vh;letter-spacing: 0.4vh;">Games</a>
          </li>
          <li class="nav-item">
              <a class="nav-link sidebar-link text-white" href="/lb" style="font-size: 3vh;letter-spacing: 0.4vh;">Leaderboard</a>
          </li>
          <li class="nav-item">
              <a class="nav-link sidebar-link text-white" href="/finance-blogs" style="font-size: 3vh;letter-spacing: 0.4vh;">News</a>
          </li>
          <li class="nav-item">
            <a class="nav-link sidebar-link text-white" href="/balance" style="font-size: 3vh;letter-spacing: 0.4vh;">Earning History</a>
        </li>
        <li class="nav-item">
          <a class="nav-link sidebar-link text-white" href="/expense" style="font-size: 3vh;letter-spacing: 0.4vh;">Expenses History</a>
      </li>
      </ul>
  </div>
  

    <!-- Main Content -->
    <div class="flex-grow-1 p-4">
      <div class="idk" style="margin-bottom: 3vh;">
        <h2 >User Details</h2>
        <h3 style="font-weight: 500; letter-spacing: 0.3vh;">Username : <%= u %></h3>
        <h3 style="font-weight: 500; letter-spacing: 0.3vh;">Net Balance : <%= n %> finzos</h3>
      </div>
        <!-- Total Earned and Total Spend -->
        <div class="row mb-4">
            <!-- Total Earned -->
            <div class="col-md-6">
                <div class="card p-3 glow-border">
                    <h4>Total Earned (Monthly)</h4>
                    <p class="lead"><%= totalEarnings.toFixed(2) %> finzos</p>
                </div>
            </div>
            <!-- Total Spend -->
            <div class="col-md-6">
                <div class="card p-3 glow-border">
                    <h4>Total Spend(Monthly)</h4>
                    <p class="lead"><%= totalSpent.toFixed(2) %> finzos</p>
                </div>
            </div>
        </div>
    
    

      
        <div class="canvas-container">
            <h4>Performance Chart</h4>
            <canvas id="myChart" width="400" height="200"></canvas>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

 <script>
    // Fetch earnings and spendings from the backend API
    fetch('/api/earnings-and-spendings')
      .then(response => response.json())
      .then(data => {
        const earnings = data.earnings;
        const spendings = data.spendings;
  
        console.log('Earnings:', earnings);
        console.log('Spendings:', spendings);
  
        // Prepare data for the chart
        const labels = [...new Set([
          ...earnings.map(e => new Date(e.timestamp).toLocaleString()),
          ...spendings.map(s => new Date(s.timestamp).toLocaleString())
        ])];
  
        // Convert timestamps into hourly-based data (rounding to nearest hour)
        const earningsData = labels.map(label => {
          const match = earnings.filter(e => new Date(e.timestamp).toLocaleString() === label);
          // Sum up earnings for the same hour
          return match.reduce((acc, e) => acc + e.amount, 0);
        });
  
        const spendingsData = labels.map(label => {
          const match = spendings.filter(s => new Date(s.timestamp).toLocaleString() === label);
          // Sum up spendings for the same hour
          return match.reduce((acc, s) => acc + s.amount, 0);
        });
  
        // Create the chart using Chart.js
        const ctx = document.getElementById('myChart').getContext('2d');
        new Chart(ctx, {
          type: 'line',
          data: {
            labels,
            datasets: [
              {
                label: 'Earnings',
                data: earningsData,
                borderColor: 'green',
                fill: false,
              },
              {
                label: 'Spendings',
                data: spendingsData,
                borderColor: 'red',
                fill: false,
              }
            ],
          },
          options: {
            responsive: true,
            scales: {
              x: {
                type: 'category',
                title: {
                  display: true,
                  text: 'Time (Hourly)'
                }
              },
              y: {
                title: {
                  display: true,
                  text: 'Amount'
                }
              }
            }
          }
        });
      })
      .catch(error => {
        console.error('Error fetching data:', error);
      });
  </script> 

</body>
</html>