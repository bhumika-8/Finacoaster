<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <title>Budgeting Game</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;
      /* background-color: #2d2d2d; */
      color: #fff;
      padding: 20px;
    }

    .game-container {
      max-width: 800px;
      margin: 0 auto;
      /* background-color: #444; */
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
    }

    /* header {
      text-align: center;
      margin-bottom: 30px;
    } */

    h1 {
        text-align: center;
      color: #4CAF50;
    }

    h2 {
        text-align: center;
      font-size: 1.5rem;
      margin-bottom: 20px;
    }

    .category {
      display: flex;
      align-items: center;
      margin-bottom: 15px;
    }

    .category img {
      width: 50px;
      height: 50px;
      margin-right: 20px;
    }

    .category label {
      font-size: 1.1rem;
      margin-right: 10px;
    }

    .category-input {
      padding: 8px;
      font-size: 1rem;
      border: 1px solid rgba(2, 198, 2, 0.6);
      border-radius: 5px;
      width: 15vw;
      background-color: #333;
      color: #fff;
    }

    button {
      padding: 10px 20px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 1.2rem;
      cursor: pointer;
      margin-top: 20px;
    }

    button:hover {
      background-color: #45a049;
    }

    #reset-budget {
      margin-top: 10px;
      background-color: #8B0000;
    }

    #reset-budget:hover {
      background-color: #B22222;
    }

    #feedback {
      font-size: 1.1rem;
      margin-top: 20px;
      font-weight: bold;
    }

    .category img {
      width: 60px;
      height: 60px;
    }
    i{
        color:rgba(1, 207, 1, 0.874);
        font-size: 4.2rem;
        margin-right: 1.3vw;
    }
    header {
  position: fixed; /* Fix the header at the top of the page */
  top: 0;
  left: 0;
  width: 100%;
 
  background-color: rgba(0, 0, 0, 0.7); /* Dark background with transparency */
  color: white;
  padding: 10px 20px;
  z-index: 1000; /* Ensure the header is above other content */
  
}

/* Header Container */
.header-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 1200px;
  margin: 0 auto;
}

/* Logo Styling */
.logo {
  font-size: 1.5rem;
  font-weight: bold;
  text-decoration: none;
  color: rgba(0, 128, 0, 0.8); /* Olive green for the logo */
}

/* Navigation Menu */
nav ul {
  list-style-type: none;
  display: flex;
}

nav ul li {
  margin-left: 20px;
}

nav ul li a {
  text-decoration: none;
  color: white;
  font-size: 1rem;
  transition: color 0.3s ease;
}

nav ul li a:hover {
  color: rgba(0, 128, 0, 0.8); /* Olive green on hover */
}

  </style>
</head>
<body dark-bs-theme="dark">
    <header>
        <div class="header-container">
          <a href="/" class="logo">Finacoaster</a>
          <nav>
            <ul>
              
              <li><i class="fa-solid fa-house" style="font-size: 2rem; margin:0"></i><a href="/es"> Dashboard</a></li>
            </ul>
          </nav>
        </div>
      </header>
  <div class="game-container" style="margin-top: 10vh;">
    
      <h1>Welcome to the Budgeting Game</h1>
      <p>Allocate your funds wisely and maximize your savings!</p>
    
    
    <section class="budget-section">
      <h2>Your Randomly Generated Amount: <span id="random-amount">0</span>₹</h2>

      <!-- Budget Categories -->
      <div class="category">
        <i class="fa-solid fa-cart-shopping"></i>
        <label for="groceries">  Groceries</label>
        <input type="number" id="groceries" placeholder="Enter amount" class="category-input">
      </div>
      
      <div class="category">
        <i class="fa-solid fa-money-check"></i>
        <label for="tax">  Tax</label>
        <input type="number" id="tax" placeholder="Enter amount" class="category-input">
      </div>

      <div class="category">
        <i class="fa-brands fa-shopify"></i>
        <label for="mortgage">Shopping</label>
        <input type="number" id="mortgage" placeholder="Enter amount" class="category-input">
      </div>

      <div class="category">
        <i class="fa-solid fa-house-user"></i>
        <label for="rent">Rent</label>
        <input type="number" id="rent" placeholder="Enter amount" class="category-input">
      </div>

      <!-- Additional sections -->
      <div class="category">
        <i class="fa-solid fa-masks-theater"></i>
        <label for="entertainment">Entertainment</label>
        <input type="number" id="entertainment" placeholder="Enter amount" class="category-input">
      </div>

      <div class="category">
        <i class="fa-solid fa-bath"></i>
        <label for="utilities"> Utilities</label>
        <input type="number" id="utilities" placeholder="Enter amount" class="category-input">
      </div>

      <!-- <div class="category">
        <i class="fa-solid fa-piggy-bank"></i>
        <label for="savings">Savings</label>
        <input type="number" id="savings" placeholder="Enter amount" class="category-input">
      </div> -->

      <!-- Feedback section -->
      <div class="result">
        <button id="submit-budget" type="submit" onclick="submitBudget()">Submit Budget</button>
        <p id="feedback"></p>
      </div>
      
      <!-- Reset button -->
      <button id="reset-budget" type="button">Reset Budget</button>
    </section>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

  <script>
// DOM elements
const randomAmountDisplay = document.getElementById("random-amount");
const groceriesInput = document.getElementById("groceries");
const taxInput = document.getElementById("tax");
const mortgageInput = document.getElementById("mortgage");
const rentInput = document.getElementById("rent");
const entertainmentInput = document.getElementById("entertainment");
const utilitiesInput = document.getElementById("utilities");
const feedback = document.getElementById("feedback");
const submitBudgetButton = document.getElementById("submit-budget");
const resetBudgetButton = document.getElementById("reset-budget");
var savingsAccount=0;
// Function to generate a random amount between ₹5000 and ₹100000
function generateRandomAmount() {
  const amount = Math.floor(Math.random() * (100000 - 5000 + 1)) + 5000;
  randomAmountDisplay.textContent = amount;
  return amount;
}

// Store the randomly generated amount
let totalAmount = generateRandomAmount();

// Submit budget and evaluate the inputs
async function submitBudget() {
  const groceries = parseFloat(groceriesInput.value) || 0;
  const tax = parseFloat(taxInput.value) || 0;
  const mortgage = parseFloat(mortgageInput.value) || 0;
  const rent = parseFloat(rentInput.value) || 0;
  const entertainment = parseFloat(entertainmentInput.value) || 0;
  const utilities = parseFloat(utilitiesInput.value) || 0;

  const totalAllocated = groceries + tax + mortgage + rent + entertainment + utilities;
  const savingsAmount = totalAmount - totalAllocated;

  // Feedback logic
  if (savingsAmount < 0) {
    feedback.innerHTML = "Oops! You've overspent your budget.";
    feedback.style.color = "red";
    return;
  }

  feedback.innerHTML = `Great job! You have saved ₹${savingsAmount.toFixed(2)}.`;
  feedback.style.color = savingsAmount >= totalAllocated * 0.2 ? "#4CAF50" : "orange";

  if (savingsAmount >= totalAllocated * 0.2) {
    feedback.innerHTML += " You really know how to budget!";
  } else {
    feedback.innerHTML += " Try to save more next time!";
  }

  // Send data to the server
  try {
    const response = await fetch('/api/update-balance', {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ totalAmount, savingsAmount })
    });

    const data = await response.json();

    if (response.ok) {
      console.log("Server response:", data);
      feedback.innerHTML += `<br>${data.message}`;
    } else {
      feedback.innerHTML += `<br>Server error: ${data.message}`;
    }
  } catch (error) {
    console.error("Network error:", error);
    feedback.innerHTML += "<br>Failed to update balance. Please try again later.";
  }
}

// Reset the game
function resetBudget() {
  groceriesInput.value = "";
  taxInput.value = "";
  mortgageInput.value = "";
  rentInput.value = "";
  entertainmentInput.value = "";
  utilitiesInput.value = "";
  feedback.textContent = "";
  totalAmount = generateRandomAmount(); // Generate a new random amount
}

// Event listeners
submitBudgetButton.addEventListener("click", submitBudget);
resetBudgetButton.addEventListener("click", resetBudget);

// Initial setup
generateRandomAmount();

  </script>
</body>
</html>


